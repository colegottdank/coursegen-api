name: STAGING - Deploy Migrations and Workers

on:
  workflow_dispatch:

jobs:
  deploy-migrations:
    runs-on: ubuntu-22.04

    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
      PROJECT_ID: ${{ secrets.TEST_PROJECT_ID }}
      OPENAI_APIKEY: ${{ secrets.OPENAI_APIKEY }}
      OPENAI_ORG: ${{ secrets.OPENAI_ORG }}
      UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
      UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
      ENV_NAME: test

    steps:
      - uses: actions/checkout@v3

      - uses: supabase/setup-cli@v1
        with:
          version: 1.27.10

      - run: |
          supabase link --project-ref ${{ secrets.TEST_PROJECT_ID }}
          supabase db push
          supabase functions deploy new_course_v4 --project-ref ${{ secrets.TEST_PROJECT_ID }} --import-map "./supabase/functions/import_map.json"
          supabase functions deploy lesson_content_v2 --project-ref ${{ secrets.TEST_PROJECT_ID }} --import-map "./supabase/functions/import_map.json"
          supabase functions deploy get_course --project-ref ${{ secrets.TEST_PROJECT_ID }} --import-map "./supabase/functions/import_map.json"
          supabase functions deploy save_course --project-ref ${{ secrets.TEST_PROJECT_ID }} --import-map "./supabase/functions/import_map.json"
      
  deploy-workers:
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Cache npm packages
        uses: actions/cache@v2.1.7
        with:
          path: |
            ./workers/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./workers/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install --prefix ./workers
      - name: Publish to staging
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          environment: 'staging'
          workingDirectory: 'workers'
        env:
          SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.STAGING_SUPABASE_SERVICE_ROLE_KEY }}
          OPENAI_API_KEY: ${{ secrets.STAGING_OPENAI_API_KEY }}
          OPENAI_ORG: ${{ secrets.OPENAI_ORG }}
          